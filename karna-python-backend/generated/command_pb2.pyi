"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _CommandExecutionStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _CommandExecutionStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CommandExecutionStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PENDING: _CommandExecutionStatus.ValueType  # 0
    IN_PROGRESS: _CommandExecutionStatus.ValueType  # 1
    COMPLETED: _CommandExecutionStatus.ValueType  # 2
    FAILED: _CommandExecutionStatus.ValueType  # 3

class CommandExecutionStatus(_CommandExecutionStatus, metaclass=_CommandExecutionStatusEnumTypeWrapper): ...

PENDING: CommandExecutionStatus.ValueType  # 0
IN_PROGRESS: CommandExecutionStatus.ValueType  # 1
COMPLETED: CommandExecutionStatus.ValueType  # 2
FAILED: CommandExecutionStatus.ValueType  # 3
global___CommandExecutionStatus = CommandExecutionStatus

@typing.final
class CommandRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMMAND_FIELD_NUMBER: builtins.int
    DOMAIN_FIELD_NUMBER: builtins.int
    command: builtins.str
    domain: builtins.str
    def __init__(
        self,
        *,
        command: builtins.str = ...,
        domain: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["command", b"command", "domain", b"domain"]) -> None: ...

global___CommandRequest = CommandRequest

@typing.final
class CommandRPCRequest(google.protobuf.message.Message):
    """Request message types"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXECUTE_COMMAND_FIELD_NUMBER: builtins.int
    @property
    def execute_command(self) -> global___CommandRequest: ...
    def __init__(
        self,
        *,
        execute_command: global___CommandRequest | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["execute_command", b"execute_command", "method", b"method"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["execute_command", b"execute_command", "method", b"method"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["method", b"method"]) -> typing.Literal["execute_command"] | None: ...

global___CommandRPCRequest = CommandRPCRequest

@typing.final
class CommandAction(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class CoordinatesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    TYPE_FIELD_NUMBER: builtins.int
    COORDINATES_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    type: builtins.str
    text: builtins.str
    @property
    def coordinates(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        type: builtins.str = ...,
        coordinates: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        text: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_text", b"_text", "text", b"text"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_text", b"_text", "coordinates", b"coordinates", "text", b"text", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_text", b"_text"]) -> typing.Literal["text"] | None: ...

global___CommandAction = CommandAction

@typing.final
class CommandResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMMAND_TEXT_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    ACTIONS_FIELD_NUMBER: builtins.int
    command_text: builtins.str
    status: global___CommandExecutionStatus.ValueType
    message: builtins.str
    @property
    def actions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CommandAction]: ...
    def __init__(
        self,
        *,
        command_text: builtins.str = ...,
        status: global___CommandExecutionStatus.ValueType = ...,
        message: builtins.str = ...,
        actions: collections.abc.Iterable[global___CommandAction] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["actions", b"actions", "command_text", b"command_text", "message", b"message", "status", b"status"]) -> None: ...

global___CommandResult = CommandResult

@typing.final
class CommandRPCResponse(google.protobuf.message.Message):
    """Response message types"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMMAND_RESPONSE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    error: builtins.str
    @property
    def command_response(self) -> global___CommandResult: ...
    def __init__(
        self,
        *,
        command_response: global___CommandResult | None = ...,
        error: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["command_response", b"command_response", "error", b"error", "type", b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["command_response", b"command_response", "error", b"error", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["type", b"type"]) -> typing.Literal["command_response", "error"] | None: ...

global___CommandRPCResponse = CommandRPCResponse
